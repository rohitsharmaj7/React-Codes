{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMC,GAAE,kBAAaN,EAAMO,IAAMN,UAAU,MAA3C,iC,iBCmCSO,EAhCG,SAACR,GAEjB,IAZkBS,EAAQC,EAYpBC,EAAUC,cACVC,EAAWC,cAGXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QACrCC,GAjBYV,EAiBcT,EAAMS,OAjBZC,EAiBmBK,EAhBtCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAkBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACI,yBAAQC,QAPa,WACvBb,EAAQc,KAAK,iBAAkBV,EAAqB,OAAO,SAMzD,kBAA6CA,EAAqB,aAAa,iBAEnF,oBAAId,UAAWC,IAAQwB,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVF,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMrB,a,yBCtBRsB,EAXO,WACpB,OACE,sBAAK5B,UAAWC,IAAQ4B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM7B,UAAU,MAAMK,GAAG,aAAzB,6B,gBCiCSyB,UAhCG,WAEd,MAAqDC,YAAQC,KAAa,GAAnEC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,OAAYC,EAA/B,EAA0BC,KAAkBC,EAA5C,EAA4CA,MAM5C,OAJAC,qBAAU,WACNL,MACF,CAACA,IAEW,YAAXC,EAES,qBAAKlC,UAAU,WAAf,SACJ,cAACuC,EAAA,EAAD,MAILF,EAGK,qBAAKrC,UAAU,mBAAf,SAAmCqC,IAI7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAMxD,cAAC,EAAD,CAAWhC,OAAQ2B,IAJZ,cAAC,EAAD","file":"static/js/5.e3f16631.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2IAvx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__25Dql\",\"sorting\":\"QuoteList_sorting__dk9hV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2CUIP\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search)\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes,isSortingAscending)\n\n  const changeSortingHandler = () => {\n        history.push('/quotes?sort='+ (isSortingAscending ? 'desc':'asc'))\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n          <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending':'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import {Link} from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport {getAllQuotes} from '../lib/api';\r\n\r\n\r\nconst AllQuotes = () =>{\r\n    \r\n    const {sendRequest,status,data:loadedQuotes,error} = useHttp(getAllQuotes,true)\r\n    \r\n    useEffect(()=>{\r\n        sendRequest();\r\n    },[sendRequest])\r\n\r\n    if(status === \"pending\")\r\n    {\r\n        return (<div className=\"centered\">\r\n            <LoadingSpinner/>\r\n        </div>)\r\n    }\r\n\r\n    if(error)\r\n    {\r\n        return (\r\n            <div className=\"centered focused\">{error}</div>\r\n        )\r\n    }\r\n\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0 ) )\r\n    {\r\n        return <NoQuotesFound/>\r\n    }  \r\n\r\n    return(\r\n        <QuoteList quotes={loadedQuotes}/>\r\n    )\r\n}\r\n\r\nexport default AllQuotes;"],"sourceRoot":""}